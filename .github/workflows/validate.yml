name: Validate Integration

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  validate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements_dev.txt
        pip install -r requirements_test.txt
        pip install imouapi==1.0.15

    - name: Run pre-commit hooks
      run: |
        pip install pre-commit
        pre-commit run --all-files

    - name: Install component in development mode
      run: |
        pip install -e custom_components/imou_life/
        python -c "import custom_components.imou_life; print('✅ Component imported successfully')"

    - name: Verify dependencies
      run: |
        python -c "import imouapi; print('✅ imouapi module available')"
        python -c "from imouapi.device import ImouDevice; print('✅ ImouDevice class available')"

    - name: Run tests with coverage
      run: |
        python -m pytest tests/ -v --cov=custom_components/imou_life --cov-report=xml --cov-report=html

    - name: Upload coverage to Coveralls
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Validate manifest
      run: |
        python -c "import json; json.load(open('custom_components/imou_life/manifest.json')); print('✅ Manifest validation passed')"

    - name: Validate translations
      run: |
        python -c "import json; import os; [json.load(open(f)) for f in os.listdir('custom_components/imou_life/translations') if f.endswith('.json')]; print('✅ Translation validation passed')"

    - name: Check code formatting
      run: |
        black --check --diff custom_components/ tests/
        isort --check-only --diff custom_components/ tests/

    - name: Lint with flake8
      run: |
        flake8 custom_components/ tests/ --max-line-length=88 --extend-ignore=E203,W503

    - name: Security check with bandit
      run: |
        bandit -r custom_components/ -f json -o bandit-report.json || true
        cat bandit-report.json
