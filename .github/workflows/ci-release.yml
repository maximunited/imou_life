name: CI Release

# This workflow creates draft releases when code is pushed to main/master
# It runs in parallel with the test workflow to create releases automatically
on:
  push:
    branches:
      - main
      - master
    paths-ignore:
      - '**.md'

jobs:
  create-draft-release:
    runs-on: ubuntu-latest
    name: Create Draft Release
    permissions:
      contents: write
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4.1.1

      - name: Get integration name
        id: information
        shell: bash
        run: |
          name=$(find custom_components/ -type d -maxdepth 1 | tail -n 1 | cut -d "/" -f2)
          echo "name: $name"
          echo "name=$name" >> $GITHUB_OUTPUT

      - name: Get integration version from manifest
        id: version
        shell: bash
        run: |
          version=$(jq -r '.version' custom_components/${{ steps.information.outputs.name }}/manifest.json)
          echo "version: $version"
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_depth: 10
          version: ${{ steps.version.outputs.version }}
          path: ./CHANGELOG.md

      - name: Create zip file for the integration
        run: |
          cd "${{ github.workspace }}/custom_components/${{ steps.information.outputs.name }}"
          zip ${{ steps.information.outputs.name }}.zip -r ./

      - name: Check if release already exists
        id: check_release
        run: |
          # Check if a draft release with this version already exists
          if gh release list --json tagName,isDraft | jq -e '.[] | select(.tagName == "ci-${{ steps.version.outputs.version }}" and .isDraft == true)' > /dev/null; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Draft Release
        if: steps.check_release.outputs.exists == 'false'
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          name: "CI Draft Release - ${{ steps.version.outputs.version }}"
          tag_name: "ci-${{ steps.version.outputs.version }}"
          body: |
            ## CI Draft Release - ${{ steps.version.outputs.version }}

            This is an automatic draft release created after all tests passed successfully.

            ### Changes
            ${{ steps.changelog_reader.outputs.changes }}

            ### Installation
            1. Download the `${{ steps.information.outputs.name }}.zip` file from this release
            2. Extract to your Home Assistant `custom_components` directory
            3. Restart Home Assistant
            4. Add the integration via Settings > Devices & Services

            ### Requirements
            - Home Assistant 2023.8.0 or later
            - imouapi==1.0.15

            ### Status
            ✅ All tests passed
            ✅ Code quality checks passed
            ✅ HACS validation passed
            ✅ Hassfest validation passed

          files: |
            ${{ steps.information.outputs.name }}.zip
          draft: true
          prerelease: true

      - name: Update existing release
        if: steps.check_release.outputs.exists == 'true'
        run: |
          echo "Draft release already exists for version ${{ steps.version.outputs.version }}"
          echo "Skipping creation of duplicate release"
